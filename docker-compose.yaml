services:

  postgres:
    image: 'postgres:latest'
    container_name: ecommerce-db
    environment:
      - 'POSTGRES_DB=ecommerce'
      - 'POSTGRES_PASSWORD=postgres'
      - 'POSTGRES_USER=postgres'
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - ecommerce-network

  keycloak-postgres:
    image: 'postgres:latest'
    container_name: keycloak-db
    environment:
      - 'POSTGRES_DB=keycloak'
      - 'POSTGRES_PASSWORD=keycloak'
      - 'POSTGRES_USER=keycloak'
    ports:
      - '5433:5432'
    volumes:
      - keycloak-data:/var/lib/postgresql/data
    networks:
      - ecommerce-network

  keycloak:
    image: quay.io/keycloak/keycloak:26.1.4
    container_name: keycloak
    environment:
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://keycloak-postgres:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=keycloak
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME=localhost
      - KC_HOSTNAME_PORT=8000
      - KC_HOSTNAME_PATH=/auth
      - KC_HOSTNAME_URL=http://localhost:8000/auth
      - KC_SPI_HOSTNAME_DEFAULT_FRONTEND_URL=http://localhost:8000/auth
      - KC_HTTP_RELATIVE_PATH=/auth
    ports:
      - "8080:8080"
    depends_on:
      - keycloak-postgres
    command: start-dev
    volumes:
      - ./keycloak/ecommerce-realm.json:/tmp/ecommerce-realm.json
    networks:
      - ecommerce-network

  keycloak-setup:
    image: curlimages/curl:latest
    volumes:
      - ./keycloak/import-realm.sh:/import-realm.sh
      - ./keycloak/ecommerce-realm.json:/tmp/ecommerce-realm.json
    depends_on:
      - keycloak
    command: ["/bin/sh", "/import-realm.sh"]
    networks:
      - ecommerce-network

  # Kong database
  kong-database:
    image: postgres:16
    container_name: kong-database
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    ports:
      - "5434:5432"
    volumes:
      - kong-data:/var/lib/postgresql/data
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Kong migration
  kong-migration:
    image: kong:3.4
    container_name: kong-migration
    depends_on:
      kong-database:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_DATABASE: kong
    command: kong migrations bootstrap
    restart: on-failure
    networks:
      - ecommerce-network

  # Kong service
  kong:
    image: kong:3.4
    container_name: kong
    depends_on:
      kong-migration:
        condition: service_completed_successfully
      kong-database:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_DATABASE: kong
      KONG_DNS_ORDER: LAST,A,CNAME
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl
    restart: on-failure
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8002:8002"
    networks:
      - ecommerce-network
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 5s
      retries: 5

  kong-setup:
    build:
      context: ./kong-setup
      dockerfile: Dockerfile
    container_name: kong-setup
    depends_on:
      - kong
      - product-service
      - keycloak
    networks:
      - ecommerce-network
    restart: on-failure

  product-service:
    build: ./product-service
    container_name: product-service
    depends_on:
      - postgres
      - keycloak
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/ecommerce
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER-URI=http://keycloak:8080/realms/ecommerce
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI=http://keycloak:8080/realms/ecommerce/protocol/openid-connect/certs
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=DEBUG
    ports:
      - "8081:8081"
    networks:
      - ecommerce-network

  frontend:
    build: ./frontend
    container_name: ecommerce-frontend
    ports:
      - "3000:80"
    depends_on:
      - product-service
      - keycloak
      - kong
    networks:
      - ecommerce-network

networks:
  ecommerce-network:
    driver: bridge

volumes:
  postgres-data:
  keycloak-data:
  kong-data: